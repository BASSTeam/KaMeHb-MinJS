/*
Title:		Свёртывание-развёртывание блоков
Authors:	Влад [KaMeHb] Марченко & Shawn (motionpack.js)
License:	GNU GPLv3
Note:	Addon v1.6:	Возможность позиционирования указателей
								Указывать в функции set_real_height вторым аргументом
								аргумент - ассоциативный массив параметров
								параметр позиционирования - 'arrow position'
								например,
								set_real_height('someid',{'arrow position':'before header'});
			Addon v1.9:	Добавлена позиция 'after content' - стрелка показывается сразу после заголовка
								Маркировка выбранных элементов
			Addon v1.10:	Добавлены параметры 'arrow top', 'arrow bottom', 'arrow left' и 'arrow right' - возможность жёстко указать положение стрелок относительно 'arrow position'
			Addon v1.12:	Добавлен параметр скрытия заголовка по нажатию 'hide ref'. У параметра нет обязательного значения (можно передавать пустую строку)
			Addon v1.13:	Добавлена позиция указателей 'none' (для их скрытия, если не нужны)

			Fix v1.1:		Теперь стрелки используют цвет текста(!) родительского элемента
			Fix v1.2:		Исправлена кодировка
			Fix v1.3:		Автоматическое назначение cursor:pointer;
			Fix v1.4:		Исправление краша при не заданном счётчике высоты
			Fix v1.5:		z-index для указателей 
			Fix v1.7:		Более точное позиционирование стрелок
								Изменение типа отступа заголовка
								Минифицирован CSS
								Теперь параметры - не string(json_string(object(array))),а более простая запись - object(array)
			Fix v1.8:		Исправлено положение генерируемого блока указателя в DOM-дереве для доступа к его положению посредством CSS
			Fix v1.11:		Переопределено определение элемента указателей (теперь по id'у)
			
			Для указания нескольких параметров используйте следующий синтаксис (сразу на примере):
			set_real_height('someid',{'arrow position':'after content','arrow top':'4px'});

ToDo:		--
*/
var timerlen = 5;
var slideAniLen = 250;

var timerID = new Array();
var startTime = new Array();
var obj = new Array();
var endHeight = new Array();
var moving = new Array();
var dir = new Array();

container_styled = false;

style=document.createElement('style');
style.id='autogenerated-js-style-aymr0dn3';
style.innerHTML='.down.arrow.icon,.up.arrow.icon{margin-left:5px;margin-top:3px;width:0;height:0;border-right:solid 11px currentColor;border-top:solid 7px transparent;border-bottom:solid 7px transparent;transform:rotate(-90deg);z-index:-1;}.up.arrow.icon{transform:rotate(90deg);}.right,.left{position:absolute;top:-1px;}.right{right:8px;}.left{left:-2px;}.after{display:inline-block;position:relative;left:2px;top:1px;}';
document.head.appendChild(style);
//специально для Катюхи, кое-что переопределим тут
//от узнает - убъёт
window.onload=function(){
	document.body.innerHTML=document.body.innerHTML.replace(/href="@.html"/g, "style='cursor:pointer;'");
	style=document.createElement('style');
	style.id='autogenerated-js-style-aymr0dn4';
	style.innerHTML='.block1{width: 80%;position: relative;left: 10%;}';
	document.head.appendChild(style);
}
//конец блока. потом убрать

function slidedown(objname){
        if(moving[objname])
                return;

        if(document.getElementById(objname).style.display != "none")
                return; // cannot slide down something that is already visible

        moving[objname] = true;
        dir[objname] = "down";
        startslide(objname);
}

function slideup(objname){
        if(moving[objname])
                return;

        if(document.getElementById(objname).style.display == "none")
                return; // cannot slide up something that is already hidden

        moving[objname] = true;
        dir[objname] = "up";
        startslide(objname);
}

function startslide(objname){
        obj[objname] = document.getElementById(objname);

        endHeight[objname] = parseInt(obj[objname].style.height);
        startTime[objname] = (new Date()).getTime();

        if(dir[objname] == "down"){
                obj[objname].style.height = "1px";
        }

        obj[objname].style.display = "block";

        timerID[objname] = setInterval('slidetick(\'' + objname + '\');',timerlen);
}

function slidetick(objname){
        var elapsed = (new Date()).getTime() - startTime[objname];

        if (elapsed > slideAniLen)
                endSlide(objname);
        else {
                var d =Math.round(elapsed / slideAniLen * endHeight[objname]);
                if(dir[objname] == "up")
                        d = endHeight[objname] - d;

                obj[objname].style.height = d + "px";
        }

        return;
}

function endSlide(objname){
        clearInterval(timerID[objname]);

        if(dir[objname] == "up")
                obj[objname].style.display = "none";

        obj[objname].style.height = endHeight[objname] + "px";

        delete(moving[objname]);
        delete(timerID[objname]);
        delete(startTime[objname]);
        delete(endHeight[objname]);
        delete(obj[objname]);
        delete(dir[objname]);

        return;
}

function set_real_height(id,args){
	var curElem=document.getElementById(id);
	if (curElem==null){
		console.log('Ну нету элемента (совсем, не то, что блока) с id`ом '+id+'. Зачем ото в body onload лишнее пихать?');
		return;
	}
	curElem.setAttribute('hidden-container', 'yes');
	curElem.parentNode.style='position:relative;';
	var secCurElem = curElem.parentNode.getElementsByTagName('div')[0];
	if (secCurElem.hasAttribute('style')){
		var backuped_style=secCurElem.getAttribute('style');
		secCurElem.style='';
		secCurElem.removeAttribute('style');
		secCurElem.setAttribute('style', backuped_style+' cursor:pointer;');
	} else secCurElem.setAttribute('style', 'cursor:pointer;');
	elem=document.createElement('div');
	curElem.parentNode.insertBefore(elem,curElem.parentNode.getElementsByTagName('div')[1]);
	elem.className='down arrow icon right';
	elem.id='arrows-for-'+id+'-div';
	var count=curElem.offsetHeight;
	if (curElem.hasAttribute('style')){
		var backuped_style=curElem.getAttribute('style');
		curElem.style='';
		curElem.removeAttribute('style');
		count=curElem.offsetHeight;
		curElem.setAttribute('style', backuped_style+' height:'+count+'px;');
	} else curElem.setAttribute('style', 'height:'+count+'px;');
	if (typeof(args)=='object'){
		if (args['arrow position']=='before header'){
			elem.className='down arrow icon left';
			header_div=elem.parentNode.getElementsByTagName('div')[0];
			if (header_div.hasAttribute('style')){
				var backuped_style=header_div.getAttribute('style');
				header_div.style='';
				header_div.removeAttribute('style');
				header_div.setAttribute('style', backuped_style+' padding-left: 20px;');
			} else header_div.setAttribute('style', 'padding-left: 20px;');
		} else if (args['arrow position']=='after content'){
			elem.className='down arrow icon after';
			header_div=elem.parentNode.getElementsByTagName('div')[0];
			elem.parentNode.removeChild(elem);
			header_div.innerHTML='<div style="display:inline-block;">'+header_div.innerHTML+'</div>';
			header_div.appendChild(elem);
		} else if (args['arrow position']=='none'){
			elem.style="display:none;";
		}
		if (args['arrow top']!=null){
			var style_block=document.getElementById('autogenerated-js-style-aymr0dn3');
			style_block.innerHTML=style_block.innerHTML+'#arrows-for-'+id+'-div{top:'+args['arrow top']+';}';
		}
		if (args['arrow bottom']!=null){
			var style_block=document.getElementById('autogenerated-js-style-aymr0dn3');
			style_block.innerHTML=style_block.innerHTML+'#arrows-for-'+id+'-div{bottom:'+args['arrow bottom']+';}';
		}
		if (args['arrow left']!=null){
			var style_block=document.getElementById('autogenerated-js-style-aymr0dn3');
			style_block.innerHTML=style_block.innerHTML+'#arrows-for-'+id+'-div{left:'+args['arrow left']+';}';
		}
		if (args['arrow right']!=null){
			var style_block=document.getElementById('autogenerated-js-style-aymr0dn3');
			style_block.innerHTML=style_block.innerHTML+'#arrows-for-'+id+'-div{right:'+args['arrow right']+';}';
		}
		if (args['hide ref']!=null){
			secCurElem.setAttribute('hide-ref', 'yes');
			elem.setAttribute('hide-ref', 'yes');
		}
	}
}

function open_close_div_beautifully(element){
	var curElId=element.parentNode.querySelectorAll('div[hidden-container="yes"]')[0].id;
	if (element.parentNode.querySelectorAll('div[hide-ref="yes"]')[0]!=null){
		element.parentNode.querySelectorAll('div[hide-ref="yes"]')[0].style="display:none;";}
	if (element.parentNode.querySelectorAll('div[hide-ref="yes"]')[1]!=null){
		element.parentNode.querySelectorAll('div[hide-ref="yes"]')[1].style="display:none;";}
	var el2=document.getElementById('arrows-for-'+curElId+'-div');
	if (el2.className=='down arrow icon right'){
		el2.className='up arrow icon right';
		slidedown(curElId);
	} else if (el2.className=='up arrow icon right'){
		el2.className='down arrow icon right';
		slideup(curElId);
	} else if (el2.className=='down arrow icon left'){
		el2.className='up arrow icon left';
		slidedown(curElId);
	} else if (el2.className=='up arrow icon left'){
		el2.className='down arrow icon left';
		slideup(curElId);
	} else if (el2.className=='down arrow icon after'){
		el2.className='up arrow icon after';
		slidedown(curElId);
	} else if (el2.className=='up arrow icon after'){
		el2.className='down arrow icon after';
		slideup(curElId);
	}
}
